apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/path: {{ .Values.annotations.path }}
        prometheus.io/port: "{{ .Values.annotations.port }}"
        prometheus.io/scrape: "{{ .Values.annotations.scrape }}"
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}
    spec:
      imagePullSecrets:
        - name: dockerhub-secret
      initContainers:
        - name: debug-env
          image: busybox
          command: ['sh', '-c', 'echo "SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL"']
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: postgres_uri
          resources:
            requests:
              cpu: "10m"
              memory: "16Mi"
            limits:
              cpu: "20m"
              memory: "32Mi"
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
          resources:
            requests:
              cpu: "10m"
              memory: "16Mi"
            limits:
              cpu: "20m"
              memory: "32Mi"
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image }}:{{ .Values.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: postgres_uri
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: postgres_user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: postgres_password
            - name: REPORT_PATH
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: report_path
            - name: LOG_PATH
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
                  key: log_path
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{ .Values.containerPort }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
      volumes:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-conf
            items:
              - key: postgres_uri
                path: postgres_uri
              - key: postgres_user
                path: postgres_user
              - key: postgres_password
                path: postgres_password
              - key: report_path
                path: report_path
              - key: log_path
                path: log_path
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-vpa
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: {{ .Release.Name }}-{{ .Chart.Name }}
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    {{- if and .Values.vpa (hasKey .Values.vpa "resourcePolicy") }}
    {{ toYaml .Values.vpa.resourcePolicy | indent 4 }}
    {{- else }}
    containerPolicies:
      - containerName: "*"
        minAllowed:
          cpu: "25m"
          memory: "32Mi"
        maxAllowed:
          cpu: "2"
          memory: "1Gi"
    {{- end }}