{{- if .Values.mongodb.enabled }}
# ConfigMap для MongoDB
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-conf
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
data:
  MONGO_INITDB_ROOT_USERNAME: {{ .Values.mongodb.env.MONGO_INITDB_ROOT_USERNAME }}
  MONGO_INITDB_ROOT_PASSWORD: {{ .Values.mongodb.env.MONGO_INITDB_ROOT_PASSWORD }}

---
# Service для MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
spec:
  ports:
    - port: {{ .Values.mongodb.containerPort }}
      targetPort: {{ .Values.mongodb.containerPort }}
  selector:
    app: mongodb
{{/*  clusterIP: None*/}}

---
# StatefulSet для MongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook-weight: "-5"
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: sausage-store
    env: {{ .Values.environment | default "production" }}
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: mongodb
          image: {{ .Values.mongodb.image }}
          envFrom:
            - configMapRef:
                name: mongodb-conf
          ports:
            - containerPort: {{ .Values.mongodb.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.mongodb.resources.requests.cpu }}
              memory: {{ .Values.mongodb.resources.requests.memory }}
            limits:
              cpu: {{ .Values.mongodb.resources.limits.cpu }}
              memory: {{ .Values.mongodb.resources.limits.memory }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.mongodb.persistence.size }}
        {{- if .Values.mongodb.persistence.storageClass }}
        storageClassName: {{ .Values.mongodb.persistence.storageClass }}
        {{- end }}
{{- end }}